'use strict';

function getSystemScreenRatio() {
  var res = wx.getSystemInfoSync();
  return 750 / res.screenWidth;
}
Component({
  properties: {
    percent: {
      type: [Number, String],
      value: 100
    },
    width: {
      type: [Number, String],
      value: 700
    },
    strokeWidth: {
      type: [Number, String],
      value: 6
    },
    activeColor: {
      type: [String, Array],
      value: '#FFFAF0, #ff6600'
    },
    bufferColor: {
      type: String,
      value: '#00'
      // 默认为无色
    },
    backgroundColor: {
      type: String,
      value: '#e5e5e5'
    },
    radius: {
      type: [Number, String],
      value: 5
    },
    blockSrc: {
      type: String,
      value: null
    },
    blockSize: {
      type: [Number, String],
      value: 40
    },
    blockColor: {
      type: String,
      value: '#FFFFFF'
    },
    value: {
      type: [Number, String],
      value: 0
    },
    max: {
      type: [Number, String],
      value: 100
    },
    disabled: {
      type: Boolean,
      value: false
    },
    isCustom: {
      type: Boolean,
      value: false
    },
    blockImageWidth: {
      type: [Number, String],
      value: 0
    },
    blockImageHeight: {
      type: [Number, String],
      value: 0
    },
    orientation: {
      type: [Number, String],
      value: 'landscape'
      // slider方向 landscape横向 portrait纵向
    },
    isMonitoring: {
      type: Boolean,
      value: true
    }
  },
  data: {
    screenRatio: 0,
    sliderStartX: 0,
    sliderStartY: 0,
    startValue: 0,
    portraitOrientation: 'bottom',
    clickEnlargeSize: 60
  },
  attached: function attached() {
    var activeColor = this.data.activeColor;
    var that = this;
    if (!!~activeColor.indexOf(',')) {
      this.setData({
        activeLineColor: activeColor.split(',')
      });
    }
    var blockSize = this.data.blockSize;
    if (blockSize > 40) {
      this.setData({
        blockSize: 40
      });
    } else if (blockSize < 20) {
      this.setData({
        blockSize: 20
      });
    }
    this.setData({ screenRatio: getSystemScreenRatio(), strokeWidth: Number(this.data.strokeWidth) });
  },
  methods: {
    sliderTap: function sliderTap(e) {
      if (!this.data.disabled) {
        var that = this;
        var changedTouches = e.changedTouches[0];
        var value = 0;
        if (this.data.orientation == 'landscape') {
          value = this.data.max * ((changedTouches.pageX - e.currentTarget.offsetLeft) * this.data.screenRatio / this.data.width);
        } else {
          value = this.data.max * ((this.data.width - (changedTouches.pageY - e.currentTarget.offsetTop) * this.data.screenRatio) / this.data.width);
        }

        // 超出边界时
        if (value < 0 || value > this.data.max) {
          return;
        }
        if (this.data.percent <= value / this.data.max * 100) {
          this.setData({ value: that.data.percent * that.data.max / 100 });
        } else {
          this.setData({ value: value });
        }

        var detail = e.changedTouches;
        var option = {};
        this.triggerEvent('sliderTap', detail, option);
      }
    },
    sliderStart: function sliderStart(e) {
      if (!this.data.disabled) {
        var that = this;
        var detail = e.changedTouches;
        var option = {};
        var changedTouches = e.changedTouches[0];
        this.setData({ isMonitoring: false });
        if (this.data.sliderStartX == 0) {
          this.setData({ sliderStartX: changedTouches.pageX });
        }
        if (this.data.sliderStartY == 0) {
          this.setData({ sliderStartY: changedTouches.pageY });
        }
        if (this.data.startValue == 0) {
          var startValue = this.data.value;
          this.setData({ startValue: startValue });
        }
        this.triggerEvent('sliderStart', detail, option);
      }
    },
    sliderChange: function sliderChange(e) {
      if (!this.data.disabled) {
        var changedTouches = e.changedTouches[0];
        // 当前相对值

        var value = 0;
        if (this.data.orientation == 'landscape') {
          value = (changedTouches.pageX - this.data.sliderStartX) * this.data.screenRatio / this.data.width * this.data.max + Number(this.data.startValue);
        } else {
          value = (this.data.sliderStartY - changedTouches.pageY) * this.data.screenRatio / this.data.width * this.data.max + Number(this.data.startValue);
        }
        // 超出边界时
        if (value < 0) {
          value = 0;
        }
        if (value > this.data.max) {
          value = this.data.max;
        }
        this.setData({ value: value });
        var detail = e.changedTouches;
        var option = {};
        this.triggerEvent('sliderChange', detail, option);
      }
    },
    sliderEnd: function sliderEnd(e) {
      if (!this.data.disabled) {
        this.setData({ isMonitoring: true });
        var that = this;
        // 如果拉动的幅度比缓冲的值大，则调到缓冲值处播放
        if (this.data.percent <= this.data.value / this.data.max * 100) {
          this.setData({ value: that.data.percent * that.data.max / 100 });
        }
        var detail = e.changedTouches;
        var option = {};
        this.triggerEvent('sliderEnd', detail, option);
      }
    },
    sliderCancel: function sliderCancel(e) {
      if (!this.data.disabled) {
        var that = this;
        this.setData({ isMonitoring: true });
        if (this.data.percent <= this.data.value / this.data.max * 100) {
          this.setData({ value: that.data.percent * that.data.max / 100 });
        }
        var detail = e.changedTouches;
        var option = {};
        this.triggerEvent('sliderCancel', detail, option);
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInd4engtc2xpZGVyLmpzIl0sIm5hbWVzIjpbImdldFN5c3RlbVNjcmVlblJhdGlvIiwicmVzIiwid3giLCJnZXRTeXN0ZW1JbmZvU3luYyIsInNjcmVlbldpZHRoIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInBlcmNlbnQiLCJ0eXBlIiwiTnVtYmVyIiwiU3RyaW5nIiwidmFsdWUiLCJ3aWR0aCIsInN0cm9rZVdpZHRoIiwiYWN0aXZlQ29sb3IiLCJBcnJheSIsImJ1ZmZlckNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwicmFkaXVzIiwiYmxvY2tTcmMiLCJibG9ja1NpemUiLCJibG9ja0NvbG9yIiwibWF4IiwiZGlzYWJsZWQiLCJCb29sZWFuIiwiaXNDdXN0b20iLCJibG9ja0ltYWdlV2lkdGgiLCJibG9ja0ltYWdlSGVpZ2h0Iiwib3JpZW50YXRpb24iLCJpc01vbml0b3JpbmciLCJkYXRhIiwic2NyZWVuUmF0aW8iLCJzbGlkZXJTdGFydFgiLCJzbGlkZXJTdGFydFkiLCJzdGFydFZhbHVlIiwicG9ydHJhaXRPcmllbnRhdGlvbiIsImNsaWNrRW5sYXJnZVNpemUiLCJhdHRhY2hlZCIsInRoYXQiLCJpbmRleE9mIiwic2V0RGF0YSIsImFjdGl2ZUxpbmVDb2xvciIsInNwbGl0IiwibWV0aG9kcyIsInNsaWRlclRhcCIsImUiLCJjaGFuZ2VkVG91Y2hlcyIsInBhZ2VYIiwiY3VycmVudFRhcmdldCIsIm9mZnNldExlZnQiLCJwYWdlWSIsIm9mZnNldFRvcCIsImRldGFpbCIsIm9wdGlvbiIsInRyaWdnZXJFdmVudCIsInNsaWRlclN0YXJ0Iiwic2xpZGVyQ2hhbmdlIiwic2xpZGVyRW5kIiwic2xpZGVyQ2FuY2VsIl0sIm1hcHBpbmdzIjoiOztBQUFBLFNBQVNBLG9CQUFULEdBQWdDO0FBQzlCLE1BQUlDLE1BQU1DLEdBQUdDLGlCQUFILEVBQVY7QUFDQSxTQUFPLE1BQU1GLElBQUlHLFdBQWpCO0FBQ0Q7QUFDREMsVUFBVTtBQUNSQyxjQUFZO0FBQ1ZDLGFBQVM7QUFDUEMsWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FEQztBQUVQQyxhQUFPO0FBRkEsS0FEQztBQUtWQyxXQUFPO0FBQ0xKLFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBREQ7QUFFTEMsYUFBTztBQUZGLEtBTEc7QUFTVkUsaUJBQWE7QUFDWEwsWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FESztBQUVYQyxhQUFPO0FBRkksS0FUSDtBQWFWRyxpQkFBYTtBQUNYTixZQUFNLENBQUNFLE1BQUQsRUFBU0ssS0FBVCxDQURLO0FBRVhKLGFBQU87QUFGSSxLQWJIO0FBaUJWSyxpQkFBYTtBQUNYUixZQUFNRSxNQURLO0FBRVhDLGFBQU87QUFDUDtBQUhXLEtBakJIO0FBc0JWTSxxQkFBaUI7QUFDZlQsWUFBTUUsTUFEUztBQUVmQyxhQUFPO0FBRlEsS0F0QlA7QUEwQlZPLFlBQVE7QUFDTlYsWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FEQTtBQUVOQyxhQUFPO0FBRkQsS0ExQkU7QUE4QlZRLGNBQVU7QUFDUlgsWUFBTUUsTUFERTtBQUVSQyxhQUFPO0FBRkMsS0E5QkE7QUFrQ1ZTLGVBQVc7QUFDVFosWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FERztBQUVUQyxhQUFPO0FBRkUsS0FsQ0Q7QUFzQ1ZVLGdCQUFZO0FBQ1ZiLFlBQU1FLE1BREk7QUFFVkMsYUFBTztBQUZHLEtBdENGO0FBMENWQSxXQUFPO0FBQ0xILFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBREQ7QUFFTEMsYUFBTztBQUZGLEtBMUNHO0FBOENWVyxTQUFLO0FBQ0hkLFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBREg7QUFFSEMsYUFBTztBQUZKLEtBOUNLO0FBa0RWWSxjQUFVO0FBQ1JmLFlBQU1nQixPQURFO0FBRVJiLGFBQU87QUFGQyxLQWxEQTtBQXNEVmMsY0FBVTtBQUNSakIsWUFBTWdCLE9BREU7QUFFUmIsYUFBTztBQUZDLEtBdERBO0FBMERWZSxxQkFBaUI7QUFDZmxCLFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBRFM7QUFFZkMsYUFBTztBQUZRLEtBMURQO0FBOERWZ0Isc0JBQWtCO0FBQ2hCbkIsWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FEVTtBQUVoQkMsYUFBTztBQUZTLEtBOURSO0FBa0VWaUIsaUJBQWE7QUFDWHBCLFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBREs7QUFFWEMsYUFBTztBQUNQO0FBSFcsS0FsRUg7QUF1RVZrQixrQkFBYztBQUNackIsWUFBTWdCLE9BRE07QUFFWmIsYUFBTztBQUZLO0FBdkVKLEdBREo7QUE2RVJtQixRQUFNO0FBQ0pDLGlCQUFhLENBRFQ7QUFFSkMsa0JBQWMsQ0FGVjtBQUdKQyxrQkFBYyxDQUhWO0FBSUpDLGdCQUFZLENBSlI7QUFLSkMseUJBQXFCLFFBTGpCO0FBTUpDLHNCQUFrQjtBQU5kLEdBN0VFO0FBcUZSQyxZQUFVLG9CQUFZO0FBQ3BCLFFBQUl2QixjQUFjLEtBQUtnQixJQUFMLENBQVVoQixXQUE1QjtBQUNBLFFBQUl3QixPQUFPLElBQVg7QUFDQSxRQUFJLENBQUMsQ0FBQyxDQUFDeEIsWUFBWXlCLE9BQVosQ0FBb0IsR0FBcEIsQ0FBUCxFQUFpQztBQUMvQixXQUFLQyxPQUFMLENBQWE7QUFDWEMseUJBQWlCM0IsWUFBWTRCLEtBQVosQ0FBa0IsR0FBbEI7QUFETixPQUFiO0FBR0Q7QUFDRCxRQUFJdEIsWUFBWSxLQUFLVSxJQUFMLENBQVVWLFNBQTFCO0FBQ0EsUUFBSUEsWUFBWSxFQUFoQixFQUFvQjtBQUNsQixXQUFLb0IsT0FBTCxDQUFhO0FBQ1hwQixtQkFBVztBQURBLE9BQWI7QUFHRCxLQUpELE1BSU8sSUFBSUEsWUFBWSxFQUFoQixFQUFvQjtBQUN6QixXQUFLb0IsT0FBTCxDQUFhO0FBQ1hwQixtQkFBVztBQURBLE9BQWI7QUFHRDtBQUNELFNBQUtvQixPQUFMLENBQWEsRUFBRVQsYUFBYS9CLHNCQUFmLEVBQXVDYSxhQUFhSixPQUFPLEtBQUtxQixJQUFMLENBQVVqQixXQUFqQixDQUFwRCxFQUFiO0FBQ0QsR0F4R087QUF5R1I4QixXQUFTO0FBQ1BDLGVBQVcsbUJBQVVDLENBQVYsRUFBYTtBQUN0QixVQUFJLENBQUMsS0FBS2YsSUFBTCxDQUFVUCxRQUFmLEVBQXlCO0FBQ3ZCLFlBQUllLE9BQU8sSUFBWDtBQUNBLFlBQUlRLGlCQUFpQkQsRUFBRUMsY0FBRixDQUFpQixDQUFqQixDQUFyQjtBQUNBLFlBQUluQyxRQUFRLENBQVo7QUFDQSxZQUFJLEtBQUttQixJQUFMLENBQVVGLFdBQVYsSUFBeUIsV0FBN0IsRUFBMEM7QUFDeENqQixrQkFBUSxLQUFLbUIsSUFBTCxDQUFVUixHQUFWLElBQWlCLENBQUN3QixlQUFlQyxLQUFmLEdBQXVCRixFQUFFRyxhQUFGLENBQWdCQyxVQUF4QyxJQUFzRCxLQUFLbkIsSUFBTCxDQUFVQyxXQUFoRSxHQUE4RSxLQUFLRCxJQUFMLENBQVVsQixLQUF6RyxDQUFSO0FBQ0QsU0FGRCxNQUVPO0FBQ0xELGtCQUFRLEtBQUttQixJQUFMLENBQVVSLEdBQVYsSUFBaUIsQ0FBQyxLQUFLUSxJQUFMLENBQVVsQixLQUFWLEdBQWtCLENBQUNrQyxlQUFlSSxLQUFmLEdBQXVCTCxFQUFFRyxhQUFGLENBQWdCRyxTQUF4QyxJQUFxRCxLQUFLckIsSUFBTCxDQUFVQyxXQUFsRixJQUFpRyxLQUFLRCxJQUFMLENBQVVsQixLQUE1SCxDQUFSO0FBQ0Q7O0FBRUQ7QUFDQSxZQUFJRCxRQUFRLENBQVIsSUFBYUEsUUFBUSxLQUFLbUIsSUFBTCxDQUFVUixHQUFuQyxFQUF3QztBQUN0QztBQUNEO0FBQ0QsWUFBSSxLQUFLUSxJQUFMLENBQVV2QixPQUFWLElBQXFCSSxRQUFRLEtBQUttQixJQUFMLENBQVVSLEdBQWxCLEdBQXdCLEdBQWpELEVBQXNEO0FBQ3BELGVBQUtrQixPQUFMLENBQWEsRUFBRTdCLE9BQU8yQixLQUFLUixJQUFMLENBQVV2QixPQUFWLEdBQW9CK0IsS0FBS1IsSUFBTCxDQUFVUixHQUE5QixHQUFvQyxHQUE3QyxFQUFiO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsZUFBS2tCLE9BQUwsQ0FBYSxFQUFFN0IsT0FBT0EsS0FBVCxFQUFiO0FBQ0Q7O0FBRUQsWUFBSXlDLFNBQVNQLEVBQUVDLGNBQWY7QUFDQSxZQUFJTyxTQUFTLEVBQWI7QUFDQSxhQUFLQyxZQUFMLENBQWtCLFdBQWxCLEVBQStCRixNQUEvQixFQUF1Q0MsTUFBdkM7QUFDRDtBQUNGLEtBMUJNO0FBMkJQRSxpQkFBYSxxQkFBVVYsQ0FBVixFQUFhO0FBQ3hCLFVBQUksQ0FBQyxLQUFLZixJQUFMLENBQVVQLFFBQWYsRUFBeUI7QUFDdkIsWUFBSWUsT0FBTyxJQUFYO0FBQ0EsWUFBSWMsU0FBU1AsRUFBRUMsY0FBZjtBQUNBLFlBQUlPLFNBQVMsRUFBYjtBQUNBLFlBQUlQLGlCQUFpQkQsRUFBRUMsY0FBRixDQUFpQixDQUFqQixDQUFyQjtBQUNBLGFBQUtOLE9BQUwsQ0FBYSxFQUFFWCxjQUFjLEtBQWhCLEVBQWI7QUFDQSxZQUFJLEtBQUtDLElBQUwsQ0FBVUUsWUFBVixJQUEwQixDQUE5QixFQUFpQztBQUMvQixlQUFLUSxPQUFMLENBQWEsRUFBRVIsY0FBY2MsZUFBZUMsS0FBL0IsRUFBYjtBQUNEO0FBQ0QsWUFBSSxLQUFLakIsSUFBTCxDQUFVRyxZQUFWLElBQTBCLENBQTlCLEVBQWlDO0FBQy9CLGVBQUtPLE9BQUwsQ0FBYSxFQUFFUCxjQUFjYSxlQUFlSSxLQUEvQixFQUFiO0FBQ0Q7QUFDRCxZQUFJLEtBQUtwQixJQUFMLENBQVVJLFVBQVYsSUFBd0IsQ0FBNUIsRUFBK0I7QUFDN0IsY0FBSUEsYUFBYSxLQUFLSixJQUFMLENBQVVuQixLQUEzQjtBQUNBLGVBQUs2QixPQUFMLENBQWEsRUFBRU4sWUFBWUEsVUFBZCxFQUFiO0FBQ0Q7QUFDRCxhQUFLb0IsWUFBTCxDQUFrQixhQUFsQixFQUFpQ0YsTUFBakMsRUFBeUNDLE1BQXpDO0FBQ0Q7QUFDRixLQTlDTTtBQStDUEcsa0JBQWMsc0JBQVVYLENBQVYsRUFBYTtBQUN6QixVQUFJLENBQUMsS0FBS2YsSUFBTCxDQUFVUCxRQUFmLEVBQXlCO0FBQ3ZCLFlBQUl1QixpQkFBaUJELEVBQUVDLGNBQUYsQ0FBaUIsQ0FBakIsQ0FBckI7QUFDQTs7QUFFQSxZQUFJbkMsUUFBUSxDQUFaO0FBQ0EsWUFBSSxLQUFLbUIsSUFBTCxDQUFVRixXQUFWLElBQXlCLFdBQTdCLEVBQTBDO0FBQ3hDakIsa0JBQVEsQ0FBQ21DLGVBQWVDLEtBQWYsR0FBdUIsS0FBS2pCLElBQUwsQ0FBVUUsWUFBbEMsSUFBa0QsS0FBS0YsSUFBTCxDQUFVQyxXQUE1RCxHQUEwRSxLQUFLRCxJQUFMLENBQVVsQixLQUFwRixHQUE0RixLQUFLa0IsSUFBTCxDQUFVUixHQUF0RyxHQUE0R2IsT0FBTyxLQUFLcUIsSUFBTCxDQUFVSSxVQUFqQixDQUFwSDtBQUNELFNBRkQsTUFFTztBQUNMdkIsa0JBQVEsQ0FBQyxLQUFLbUIsSUFBTCxDQUFVRyxZQUFWLEdBQXlCYSxlQUFlSSxLQUF6QyxJQUFrRCxLQUFLcEIsSUFBTCxDQUFVQyxXQUE1RCxHQUEwRSxLQUFLRCxJQUFMLENBQVVsQixLQUFwRixHQUE0RixLQUFLa0IsSUFBTCxDQUFVUixHQUF0RyxHQUE0R2IsT0FBTyxLQUFLcUIsSUFBTCxDQUFVSSxVQUFqQixDQUFwSDtBQUNEO0FBQ0Q7QUFDQSxZQUFJdkIsUUFBUSxDQUFaLEVBQWU7QUFDYkEsa0JBQVEsQ0FBUjtBQUNEO0FBQ0QsWUFBR0EsUUFBUSxLQUFLbUIsSUFBTCxDQUFVUixHQUFyQixFQUEwQjtBQUN4Qlgsa0JBQVEsS0FBS21CLElBQUwsQ0FBVVIsR0FBbEI7QUFDRDtBQUNELGFBQUtrQixPQUFMLENBQWMsRUFBRTdCLE9BQU9BLEtBQVQsRUFBZDtBQUNBLFlBQUl5QyxTQUFTUCxFQUFFQyxjQUFmO0FBQ0EsWUFBSU8sU0FBUyxFQUFiO0FBQ0EsYUFBS0MsWUFBTCxDQUFrQixjQUFsQixFQUFrQ0YsTUFBbEMsRUFBMENDLE1BQTFDO0FBQ0Q7QUFDRixLQXRFTTtBQXVFUEksZUFBVyxtQkFBVVosQ0FBVixFQUFhO0FBQ3RCLFVBQUksQ0FBQyxLQUFLZixJQUFMLENBQVVQLFFBQWYsRUFBeUI7QUFDdkIsYUFBS2lCLE9BQUwsQ0FBYSxFQUFFWCxjQUFjLElBQWhCLEVBQWI7QUFDQSxZQUFJUyxPQUFPLElBQVg7QUFDQTtBQUNBLFlBQUksS0FBS1IsSUFBTCxDQUFVdkIsT0FBVixJQUFxQixLQUFLdUIsSUFBTCxDQUFVbkIsS0FBVixHQUFrQixLQUFLbUIsSUFBTCxDQUFVUixHQUE1QixHQUFrQyxHQUEzRCxFQUFnRTtBQUM5RCxlQUFLa0IsT0FBTCxDQUFhLEVBQUU3QixPQUFPMkIsS0FBS1IsSUFBTCxDQUFVdkIsT0FBVixHQUFvQitCLEtBQUtSLElBQUwsQ0FBVVIsR0FBOUIsR0FBb0MsR0FBN0MsRUFBYjtBQUNEO0FBQ0QsWUFBSThCLFNBQVNQLEVBQUVDLGNBQWY7QUFDQSxZQUFJTyxTQUFTLEVBQWI7QUFDQSxhQUFLQyxZQUFMLENBQWtCLFdBQWxCLEVBQStCRixNQUEvQixFQUF1Q0MsTUFBdkM7QUFDRDtBQUNGLEtBbkZNO0FBb0ZQSyxrQkFBYyxzQkFBVWIsQ0FBVixFQUFhO0FBQ3pCLFVBQUksQ0FBQyxLQUFLZixJQUFMLENBQVVQLFFBQWYsRUFBeUI7QUFDdkIsWUFBSWUsT0FBTyxJQUFYO0FBQ0EsYUFBS0UsT0FBTCxDQUFhLEVBQUVYLGNBQWMsSUFBaEIsRUFBYjtBQUNBLFlBQUksS0FBS0MsSUFBTCxDQUFVdkIsT0FBVixJQUFxQixLQUFLdUIsSUFBTCxDQUFVbkIsS0FBVixHQUFrQixLQUFLbUIsSUFBTCxDQUFVUixHQUE1QixHQUFrQyxHQUEzRCxFQUFnRTtBQUM5RCxlQUFLa0IsT0FBTCxDQUFhLEVBQUU3QixPQUFPMkIsS0FBS1IsSUFBTCxDQUFVdkIsT0FBVixHQUFvQitCLEtBQUtSLElBQUwsQ0FBVVIsR0FBOUIsR0FBb0MsR0FBN0MsRUFBYjtBQUNEO0FBQ0QsWUFBSThCLFNBQVNQLEVBQUVDLGNBQWY7QUFDQSxZQUFJTyxTQUFTLEVBQWI7QUFDQSxhQUFLQyxZQUFMLENBQWtCLGNBQWxCLEVBQWtDRixNQUFsQyxFQUEwQ0MsTUFBMUM7QUFDRDtBQUNGO0FBL0ZNO0FBekdELENBQVYiLCJmaWxlIjoid3h6eC1zbGlkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRTeXN0ZW1TY3JlZW5SYXRpbygpIHtcclxuICB2YXIgcmVzID0gd3guZ2V0U3lzdGVtSW5mb1N5bmMoKTtcclxuICByZXR1cm4gNzUwIC8gcmVzLnNjcmVlbldpZHRoXHJcbn1cclxuQ29tcG9uZW50KHtcclxuICBwcm9wZXJ0aWVzOiB7XHJcbiAgICBwZXJjZW50OiB7XHJcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXHJcbiAgICAgIHZhbHVlOiAxMDBcclxuICAgIH0sXHJcbiAgICB3aWR0aDoge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxyXG4gICAgICB2YWx1ZTogNzAwXHJcbiAgICB9LFxyXG4gICAgc3Ryb2tlV2lkdGg6IHtcclxuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcclxuICAgICAgdmFsdWU6IDZcclxuICAgIH0sXHJcbiAgICBhY3RpdmVDb2xvcjoge1xyXG4gICAgICB0eXBlOiBbU3RyaW5nLCBBcnJheV0sXHJcbiAgICAgIHZhbHVlOiAnI0ZGRkFGMCwgI2ZmNjYwMCdcclxuICAgIH0sXHJcbiAgICBidWZmZXJDb2xvcjoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHZhbHVlOiAnIzAwJyBcclxuICAgICAgLy8g6buY6K6k5Li65peg6ImyXHJcbiAgICB9LFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgdmFsdWU6ICcjZTVlNWU1J1xyXG4gICAgfSxcclxuICAgIHJhZGl1czoge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxyXG4gICAgICB2YWx1ZTogNVxyXG4gICAgfSxcclxuICAgIGJsb2NrU3JjOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgdmFsdWU6IG51bGxcclxuICAgIH0sXHJcbiAgICBibG9ja1NpemU6IHtcclxuICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcclxuICAgICAgdmFsdWU6IDQwXHJcbiAgICB9LFxyXG4gICAgYmxvY2tDb2xvcjoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHZhbHVlOiAnI0ZGRkZGRidcclxuICAgIH0sXHJcbiAgICB2YWx1ZToge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxyXG4gICAgICB2YWx1ZTogMFxyXG4gICAgfSxcclxuICAgIG1heDoge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxyXG4gICAgICB2YWx1ZTogMTAwXHJcbiAgICB9LFxyXG4gICAgZGlzYWJsZWQ6IHtcclxuICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgdmFsdWU6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgaXNDdXN0b206IHtcclxuICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgdmFsdWU6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgYmxvY2tJbWFnZVdpZHRoOiB7XHJcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXHJcbiAgICAgIHZhbHVlOiAwXHJcbiAgICB9LFxyXG4gICAgYmxvY2tJbWFnZUhlaWdodDoge1xyXG4gICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxyXG4gICAgICB2YWx1ZTogMFxyXG4gICAgfSxcclxuICAgIG9yaWVudGF0aW9uOiB7XHJcbiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sXHJcbiAgICAgIHZhbHVlOiAnbGFuZHNjYXBlJyBcclxuICAgICAgLy8gc2xpZGVy5pa55ZCRIGxhbmRzY2FwZeaoquWQkSBwb3J0cmFpdOe6teWQkVxyXG4gICAgfSxcclxuICAgIGlzTW9uaXRvcmluZzoge1xyXG4gICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICB2YWx1ZTogdHJ1ZVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgZGF0YToge1xyXG4gICAgc2NyZWVuUmF0aW86IDAsXHJcbiAgICBzbGlkZXJTdGFydFg6IDAsXHJcbiAgICBzbGlkZXJTdGFydFk6IDAsXHJcbiAgICBzdGFydFZhbHVlOiAwLFxyXG4gICAgcG9ydHJhaXRPcmllbnRhdGlvbjogJ2JvdHRvbScsXHJcbiAgICBjbGlja0VubGFyZ2VTaXplOiA2MFxyXG4gIH0sXHJcbiAgYXR0YWNoZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgIGxldCBhY3RpdmVDb2xvciA9IHRoaXMuZGF0YS5hY3RpdmVDb2xvcjtcclxuICAgIHZhciB0aGF0ID0gdGhpc1xyXG4gICAgaWYgKCEhfmFjdGl2ZUNvbG9yLmluZGV4T2YoJywnKSkge1xyXG4gICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgIGFjdGl2ZUxpbmVDb2xvcjogYWN0aXZlQ29sb3Iuc3BsaXQoJywnKVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gICAgbGV0IGJsb2NrU2l6ZSA9IHRoaXMuZGF0YS5ibG9ja1NpemU7XHJcbiAgICBpZiAoYmxvY2tTaXplID4gNDApIHtcclxuICAgICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgICBibG9ja1NpemU6IDQwXHJcbiAgICAgIH0pXHJcbiAgICB9IGVsc2UgaWYgKGJsb2NrU2l6ZSA8IDIwKSB7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgYmxvY2tTaXplOiAyMFxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gICAgdGhpcy5zZXREYXRhKHsgc2NyZWVuUmF0aW86IGdldFN5c3RlbVNjcmVlblJhdGlvKCksIHN0cm9rZVdpZHRoOiBOdW1iZXIodGhpcy5kYXRhLnN0cm9rZVdpZHRoKSB9KVxyXG4gIH0sXHJcbiAgbWV0aG9kczoge1xyXG4gICAgc2xpZGVyVGFwOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBpZiAoIXRoaXMuZGF0YS5kaXNhYmxlZCkge1xyXG4gICAgICAgIHZhciB0aGF0ID0gdGhpc1xyXG4gICAgICAgIHZhciBjaGFuZ2VkVG91Y2hlcyA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XHJcbiAgICAgICAgdmFyIHZhbHVlID0gMFxyXG4gICAgICAgIGlmICh0aGlzLmRhdGEub3JpZW50YXRpb24gPT0gJ2xhbmRzY2FwZScpIHtcclxuICAgICAgICAgIHZhbHVlID0gdGhpcy5kYXRhLm1heCAqICgoY2hhbmdlZFRvdWNoZXMucGFnZVggLSBlLmN1cnJlbnRUYXJnZXQub2Zmc2V0TGVmdCkgKiB0aGlzLmRhdGEuc2NyZWVuUmF0aW8gLyB0aGlzLmRhdGEud2lkdGgpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhbHVlID0gdGhpcy5kYXRhLm1heCAqICgodGhpcy5kYXRhLndpZHRoIC0gKGNoYW5nZWRUb3VjaGVzLnBhZ2VZIC0gZS5jdXJyZW50VGFyZ2V0Lm9mZnNldFRvcCkgKiB0aGlzLmRhdGEuc2NyZWVuUmF0aW8pIC8gdGhpcy5kYXRhLndpZHRoKVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIC8vIOi2heWHuui+ueeVjOaXtlxyXG4gICAgICAgIGlmICh2YWx1ZSA8IDAgfHwgdmFsdWUgPiB0aGlzLmRhdGEubWF4KSB7XHJcbiAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5wZXJjZW50IDw9IHZhbHVlIC8gdGhpcy5kYXRhLm1heCAqIDEwMCkge1xyXG4gICAgICAgICAgdGhpcy5zZXREYXRhKHsgdmFsdWU6IHRoYXQuZGF0YS5wZXJjZW50ICogdGhhdC5kYXRhLm1heCAvIDEwMCB9KVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLnNldERhdGEoeyB2YWx1ZTogdmFsdWUgfSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkZXRhaWwgPSBlLmNoYW5nZWRUb3VjaGVzO1xyXG4gICAgICAgIGxldCBvcHRpb24gPSB7fTtcclxuICAgICAgICB0aGlzLnRyaWdnZXJFdmVudCgnc2xpZGVyVGFwJywgZGV0YWlsLCBvcHRpb24pO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2xpZGVyU3RhcnQ6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGlmICghdGhpcy5kYXRhLmRpc2FibGVkKSB7XHJcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzXHJcbiAgICAgICAgbGV0IGRldGFpbCA9IGUuY2hhbmdlZFRvdWNoZXM7XHJcbiAgICAgICAgbGV0IG9wdGlvbiA9IHt9O1xyXG4gICAgICAgIHZhciBjaGFuZ2VkVG91Y2hlcyA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XHJcbiAgICAgICAgdGhpcy5zZXREYXRhKHsgaXNNb25pdG9yaW5nOiBmYWxzZSB9KVxyXG4gICAgICAgIGlmICh0aGlzLmRhdGEuc2xpZGVyU3RhcnRYID09IDApIHtcclxuICAgICAgICAgIHRoaXMuc2V0RGF0YSh7IHNsaWRlclN0YXJ0WDogY2hhbmdlZFRvdWNoZXMucGFnZVggfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5zbGlkZXJTdGFydFkgPT0gMCkge1xyXG4gICAgICAgICAgdGhpcy5zZXREYXRhKHsgc2xpZGVyU3RhcnRZOiBjaGFuZ2VkVG91Y2hlcy5wYWdlWSB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5kYXRhLnN0YXJ0VmFsdWUgPT0gMCkge1xyXG4gICAgICAgICAgdmFyIHN0YXJ0VmFsdWUgPSB0aGlzLmRhdGEudmFsdWVcclxuICAgICAgICAgIHRoaXMuc2V0RGF0YSh7IHN0YXJ0VmFsdWU6IHN0YXJ0VmFsdWUgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ3NsaWRlclN0YXJ0JywgZGV0YWlsLCBvcHRpb24pO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2xpZGVyQ2hhbmdlOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBpZiAoIXRoaXMuZGF0YS5kaXNhYmxlZCkge1xyXG4gICAgICAgIHZhciBjaGFuZ2VkVG91Y2hlcyA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XHJcbiAgICAgICAgLy8g5b2T5YmN55u45a+55YC8XHJcblxyXG4gICAgICAgIHZhciB2YWx1ZSA9IDBcclxuICAgICAgICBpZiAodGhpcy5kYXRhLm9yaWVudGF0aW9uID09ICdsYW5kc2NhcGUnKSB7XHJcbiAgICAgICAgICB2YWx1ZSA9IChjaGFuZ2VkVG91Y2hlcy5wYWdlWCAtIHRoaXMuZGF0YS5zbGlkZXJTdGFydFgpICogdGhpcy5kYXRhLnNjcmVlblJhdGlvIC8gdGhpcy5kYXRhLndpZHRoICogdGhpcy5kYXRhLm1heCArIE51bWJlcih0aGlzLmRhdGEuc3RhcnRWYWx1ZSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFsdWUgPSAodGhpcy5kYXRhLnNsaWRlclN0YXJ0WSAtIGNoYW5nZWRUb3VjaGVzLnBhZ2VZKSAqIHRoaXMuZGF0YS5zY3JlZW5SYXRpbyAvIHRoaXMuZGF0YS53aWR0aCAqIHRoaXMuZGF0YS5tYXggKyBOdW1iZXIodGhpcy5kYXRhLnN0YXJ0VmFsdWUpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOi2heWHuui+ueeVjOaXtlxyXG4gICAgICAgIGlmICh2YWx1ZSA8IDApIHtcclxuICAgICAgICAgIHZhbHVlID0gMFxyXG4gICAgICAgIH1cclxuICAgICAgICBpZih2YWx1ZSA+IHRoaXMuZGF0YS5tYXgpIHtcclxuICAgICAgICAgIHZhbHVlID0gdGhpcy5kYXRhLm1heFxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldERhdGEgKHsgdmFsdWU6IHZhbHVlIH0pXHJcbiAgICAgICAgbGV0IGRldGFpbCA9IGUuY2hhbmdlZFRvdWNoZXM7XHJcbiAgICAgICAgbGV0IG9wdGlvbiA9IHt9O1xyXG4gICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KCdzbGlkZXJDaGFuZ2UnLCBkZXRhaWwsIG9wdGlvbik7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBzbGlkZXJFbmQ6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGlmICghdGhpcy5kYXRhLmRpc2FibGVkKSB7XHJcbiAgICAgICAgdGhpcy5zZXREYXRhKHsgaXNNb25pdG9yaW5nOiB0cnVlIH0pXHJcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzXHJcbiAgICAgICAgLy8g5aaC5p6c5ouJ5Yqo55qE5bmF5bqm5q+U57yT5Yay55qE5YC85aSn77yM5YiZ6LCD5Yiw57yT5Yay5YC85aSE5pKt5pS+XHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5wZXJjZW50IDw9IHRoaXMuZGF0YS52YWx1ZSAvIHRoaXMuZGF0YS5tYXggKiAxMDApIHtcclxuICAgICAgICAgIHRoaXMuc2V0RGF0YSh7IHZhbHVlOiB0aGF0LmRhdGEucGVyY2VudCAqIHRoYXQuZGF0YS5tYXggLyAxMDB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgZGV0YWlsID0gZS5jaGFuZ2VkVG91Y2hlcztcclxuICAgICAgICBsZXQgb3B0aW9uID0ge307XHJcbiAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ3NsaWRlckVuZCcsIGRldGFpbCwgb3B0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHNsaWRlckNhbmNlbDogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgaWYgKCF0aGlzLmRhdGEuZGlzYWJsZWQpIHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXNcclxuICAgICAgICB0aGlzLnNldERhdGEoeyBpc01vbml0b3Jpbmc6IHRydWUgfSlcclxuICAgICAgICBpZiAodGhpcy5kYXRhLnBlcmNlbnQgPD0gdGhpcy5kYXRhLnZhbHVlIC8gdGhpcy5kYXRhLm1heCAqIDEwMCkge1xyXG4gICAgICAgICAgdGhpcy5zZXREYXRhKHsgdmFsdWU6IHRoYXQuZGF0YS5wZXJjZW50ICogdGhhdC5kYXRhLm1heCAvIDEwMCB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgZGV0YWlsID0gZS5jaGFuZ2VkVG91Y2hlcztcclxuICAgICAgICBsZXQgb3B0aW9uID0ge307XHJcbiAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ3NsaWRlckNhbmNlbCcsIGRldGFpbCwgb3B0aW9uKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9XHJcbn0pXHJcbiJdfQ==